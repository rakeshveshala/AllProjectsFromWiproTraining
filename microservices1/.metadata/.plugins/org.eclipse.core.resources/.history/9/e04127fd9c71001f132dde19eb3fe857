package com.pizzastore.viewcontroller;


import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import com.pizzastore.model.Customer;
import com.pizzastore.service.CustomerService;


@Controller
@RequestMapping("/customers")
public class CustomerViewController {

    @Autowired
    private CustomerService customerService;

    @GetMapping("/register")
    public String showRegistrationForm(Model model) {
        model.addAttribute("customer", new Customer());
        return "register"; // Maps to `register.jsp`
    }

    @PostMapping("/register")
    public String registerCustomer(@ModelAttribute("customer") Customer customer, Model model) {
        Customer registeredCustomer = customerService.registerCustomer(customer);
        model.addAttribute("customer", registeredCustomer);
        return "registrationSuccess"; // Maps to a success page `registrationSuccess.jsp`
    }
    
    @GetMapping("/login")
    public String showLoginForm(Model model) {
        model.addAttribute("customer", new Customer()); // Use Customer as a model attribute for the login form
        return "loginCustomer"; // Maps to `loginCustomer.jsp`
    }

    @PostMapping("/login")
    public String loginCustomer(@RequestParam String username, @RequestParam String password, Model model) {
        Optional<Customer> optionalCustomer = customerService.findByUsername(username);
        if (optionalCustomer.isPresent() && optionalCustomer.get().getPassword().equals(password)) {
            model.addAttribute("customer", optionalCustomer.get());
            return "createAccount"; // Maps to `customerHome.jsp`
        }
        model.addAttribute("loginError", "Invalid username or password");
        return "loginCustomer"; // Return to the login page if authentication fails
    }

    @GetMapping("/home")
    public String showHomePage(Model model) {
        return "viewAccount"; // Maps to `customerHome.jsp`, the main dashboard or homepage
    }

    @GetMapping("/{id}")
    public String getCustomerById(@PathVariable Long id, Model model) {
        Customer customer = customerService.getCustomerById(id);
        if (customer != null) {
            model.addAttribute("customer", customer);
            return "customerDetails"; // Maps to `customerDetails.jsp`
        }
        return "error"; // Maps to an error page if the customer is not found
    }
}


